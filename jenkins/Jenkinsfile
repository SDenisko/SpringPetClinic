pipeline {
  agent none
  stages {
        stage('Build and test') {
          agent {
             docker{
                    image 'maven:3-alpine'
                    args '-v /tmp:/tmp  -v /root/.m2:/root/.m2'
                    reuseNode true
                    }
                 }
            steps {
                sh 'mvn clean package -X'
                sh 'mvn -B -X -DskipTests clean package'
                sh 'mvn test'

            }
//         }
//          stage('Test') {
//             steps {
//                 sh 'mvn test'
//             }
            post {
                always {
                    junit 'target/surefire-reports/*.xml'
                }
            }
         }
        stage('Deliver') {
            agent any
            steps {
                sh "pwd"
                sh "ls -al"
                 sh'chmod +x ./jenkins/scripts/deliver.sh'
                 sh './jenkins/scripts/deliver.sh'
            }


           post {

        success {
          withCredentials([string(credentialsId: 'botSecret', variable: 'TOKEN'), string(credentialsId: 'chatId', variable: 'CHAT_ID')]) {
          sh  ("""
              curl -s -X POST https://api.telegram.org/bot${TOKEN}/sendMessage -d chat_id=${CHAT_ID} -d parse_mode=markdown -d text='*${env.JOB_NAME}* : POC *Branch*: ${env.GIT_BRANCH} *Build* : OK *Published* = YES'
          """)
          }

    }

       aborted {
          withCredentials([string(credentialsId: 'botSecret', variable: 'TOKEN'), string(credentialsId: 'chatId', variable: 'CHAT_ID')]) {
          sh  ("""
              curl -s -X POST https://api.telegram.org/bot${TOKEN}/sendMessage -d chat_id=${CHAT_ID} -d parse_mode=markdown -d text='*${env.JOB_NAME}* : POC *Branch*: ${env.GIT_BRANCH} *Build* : `Aborted` *Published* = `Aborted`'
          """)
         }

       }

       failure {
          withCredentials([string(credentialsId: 'botSecret', variable: 'TOKEN'), string(credentialsId: 'chatId', variable: 'CHAT_ID')]) {
          sh  ("""
              curl -s -X POST https://api.telegram.org/bot${TOKEN}/sendMessage -d chat_id=${CHAT_ID} -d parse_mode=markdown -d text='*${env.JOB_NAME}* : POC  *Branch*: ${env.GIT_BRANCH} *Build* : `not OK` *Published* = `no`'
          """)
              }
            }
          } //post
          } //stage Deliver
        } //stages
     } //pipeline
     
